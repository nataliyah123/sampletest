{"ast":null,"code":"var _jsxFileName = \"/home/vagrant/autonomous/ibiasubs/src/component/show.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Show extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      error: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/categories');\n        this.setState({\n          allCategories: response.data\n        });\n      } catch (error) {\n        this.setState({\n          error\n        });\n      }\n    };\n\n    this.handleInputChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState(prev => ({ ...prev,\n        modifiedData: { ...prev.modifiedData,\n          [name]: value\n        }\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n\n      try {\n        const response = await axios.post('http://localhost:1337/restaurants', this.state.modifiedData);\n        console.log(response);\n      } catch (error) {\n        this.setState({\n          error\n        });\n      }\n    };\n\n    this.renderCheckbox = category => {\n      const {\n        modifiedData: {\n          categories\n        }\n      } = this.state;\n      const isChecked = categories.includes(category.id);\n\n      const handleChange = () => {\n        if (!categories.includes(category.id)) {\n          this.handleInputChange({\n            target: {\n              name: 'categories',\n              value: categories.concat(category.id)\n            }\n          });\n        } else {\n          this.handleInputChange({\n            target: {\n              name: 'categories',\n              value: categories.filter(v => v !== category.id)\n            }\n          });\n        }\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: category.id,\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: handleChange,\n          name: \"categories\",\n          id: category.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      error,\n      allCategories,\n      modifiedData\n    } = this.state; // Print errors if any\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"An error occured: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Restaurants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: this.handleInputChange,\n            value: modifiedData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            onChange: this.handleInputChange,\n            value: modifiedData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Select categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), allCategories.map(this.renderCheckbox)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Show;","map":{"version":3,"sources":["/home/vagrant/autonomous/ibiasubs/src/component/show.js"],"names":["React","axios","Show","Component","state","error","componentDidMount","response","get","setState","allCategories","data","handleInputChange","target","name","value","prev","modifiedData","handleSubmit","e","preventDefault","post","console","log","renderCheckbox","category","categories","isChecked","includes","id","handleChange","concat","filter","v","render","message","description","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Show extends React.Component {\n  \n    // State of your application\n    state = {\n\t error: null\n\t}\n\n  // Fetch your categories immediately after the component is mounted\n  componentDidMount = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/categories');\n      this.setState({ allCategories: response.data });\n    } catch (error) {\n      this.setState({ error });\n    }\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState(prev => ({\n      ...prev,\n      modifiedData: {\n        ...prev.modifiedData,\n        [name]: value,\n      },\n    }));\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(\n        'http://localhost:1337/restaurants',\n        this.state.modifiedData\n      );\n      console.log(response);\n    } catch (error) {\n      this.setState({ error });\n    }\n  };\n\n  renderCheckbox = category => {\n    const {\n      modifiedData: { categories },\n    } = this.state;\n    const isChecked = categories.includes(category.id);\n    const handleChange = () => {\n      if (!categories.includes(category.id)) {\n        this.handleInputChange({\n          target: { name: 'categories', value: categories.concat(category.id) },\n        });\n      } else {\n        this.handleInputChange({\n          target: {\n            name: 'categories',\n            value: categories.filter(v => v !== category.id),\n          },\n        });\n      }\n    };\n\n    return (\n      <div key={category.id}>\n        <label htmlFor={category.id}>{category.name}</label>\n        <input\n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={handleChange}\n          name=\"categories\"\n          id={category.id}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { error, allCategories, modifiedData } = this.state;\n\n    // Print errors if any\n    if (error) {\n      return <div>An error occured: {error.message}</div>;\n    }\n\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.handleSubmit}>\n          <h3>Restaurants</h3>\n          <br />\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleInputChange}\n              value={modifiedData.name}\n            />\n          </label>\n          <label>\n            Description:\n            <input\n              type=\"text\"\n              name=\"description\"\n              onChange={this.handleInputChange}\n              value={modifiedData.description}\n            />\n          </label>\n          <div>\n            <br />\n            <b>Select categories</b>\n            {allCategories.map(this.renderCheckbox)}\n          </div>\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Show;\n\n"]},"metadata":{},"sourceType":"module"}